<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vc4 on crab2313's blog</title><link>/tags/vc4/</link><description>Recent content in vc4 on crab2313's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 07 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/vc4/index.xml" rel="self" type="application/rss+xml"/><item><title>MESA源码分析：VC4驱动 - 编译器实现</title><link>/post/mesa-vc4-compiler/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>/post/mesa-vc4-compiler/</guid><description>这里先笼统的概括一下编译器部分的工作原理，细节后面再探讨。整个vc4的编译器后端一共进行了两次转换，多级优化，并实现了shader cache</description></item><item><title>MESA源码分析：VC4驱动</title><link>/post/mesa-vc4/</link><pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate><guid>/post/mesa-vc4/</guid><description>本文分析vc4驱动的用户态部分，即Mesa中的用户态驱动实现。由于vc4是绝佳的学习范本，可以极大的促进对Mesa的理解，对vc4驱动的彻底</description></item></channel></rss>